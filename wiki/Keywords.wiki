#labels Featured,Phase-Implementation
[Keywords#other other à regarder impérativement!!!]

=Glossaire des mots-clés=

===Organisation du jeu===
  # _Partie *Description du jeu*_
  # _Partie *Déclaration de nouveaux types*_
  # _Partie *Initialisations*_
  # _Partie *Définitions*_
  # _Partie *Commandes*_
  # _Partie *Règles du jeu*_
  # _Partie *Intelligence Artificielle*_

===[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]===

<br />

----
<br />

=A= 
[Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==accelerates==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'accélérer avec une valeur (voir [Keywords#by 'by']) :
{{{
definition acc1 means 
	sonic accelerates by 20; // sonic accélère de 20
}}}

==activate==
_Partie *Définitions*_
  * activer une commande ou toutes les commandes (voir [Keywords#disable 'disable'], [Keywords#keyboard 'keyboard'], [Keywords#mouse 'mouse'] et [Keywords#commands 'commands']) :
{{{
definition activerTout means
	activate commands;
definition activerPauseSeulement means 
	activate P; //active la touche P sur le clavier
}}}

==add==
_Partie *Définitions*_
  * ajouter une valeur à un attribut numérique (voir [Keywords#to 'to'] et [Keywords#sub 'sub']) : 
{{{
definition donnerBonus means 
	add 30 to life of batman; // l'attribut 'life' de l'entité batman de type Character va augmenter de 30
}}}

==ai==
_Partie *Intelligence Artificielle*_
  * détailler le contenu d'une ia (voir [Keywords#is 'is'] et [Keywords#rule 'rule']) :
{{{
ai ia_1 is
	rule /*déclencheur*/ then /*conséquences*/;
}}}

==alive==
_Partie *Définitions*_
  * dans une condition, tester si l'entité avec un attribut 'life' (ex : Character) ne l'a pas à 0 (voir [Keywords#if 'if']) :
{{{
if (perso is alive) // (voir 'is')
then /*conséquences*/
endif;
}}}

==all==
  * désigner tous les objets 3D générés hérités de Empty
{{{
assign 100 at life of all; // (voir 'assign') va assigner 100 à l'attribut 'life' de tous les objets 3D qui en possèdent un
if life of all = 0 then /*conséquences*/ endif; // (voir 'if') va tester si tous les objets générés qui ont un attribut 'life' l'ont à 0
rule all moves then /*actions*/; // (voir 'rule') teste si l'un des objets générés bouge
}}}

==and==
_Partie *Déclaration de nouveaux types*_
  * séparer les types lors de la déclaration d'un nouveau type (voir [Keywords#type 'type'] et [Keywords#is 'is']) :
{{{
type SuperPlombier is Plombier and Weapon and Vehicle; // on peut ajouter autant de type que nécessaire avec 'and' du moment que les types existent déjà et ne soient pas redondants
}}}
_Partie *Définitions*_
  * combiner plusieurs sous conditions à l'intérieur d'une condition (voir [Keywords#if 'if'], [Keywords#or 'or'] et [Keywords#not 'not']) :
{{{
if (life of perso1 = 0 and life of perso2 >= 5) //les conditions doivent être toutes les deux vraies pour pouvoir accéder à la conséquence (dans le then)
then /*conséquences*/
endif;
}}}
  * définir les bornes d'un calcul ou d'une génération aléatoire (voir [Keywords#distance 'distance'], [Keywords#angle 'angle'], [Keywords#random 'random'] et [Keywords#between 'between']) :
{{{
distance between perso1 and perso2 > 10
angle between perso1 and perso2 > 10
random between 1 and 20 
// ces valeurs peuvent être assignées ou testées dans une condition
}}}

==angle==
_Parties *Initialisations* et *Définitions*_
  * retourner la valeur de l'angle (sur l'axe z) formé par l'orientation entre deux objets :
{{{
definition calculAngle means 
	if angle between perso1 and perso2 > 10 
	then assign (angle between perso1 and perso2) to z of orientation of perso3 // (voir 'assign')
	endif;
}}}

==anticlockwise==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'effectuer une rotation dans le sens anti-horaire (trigonométrique) (voir [Keywords#turns 'turns'], [Keywords#by 'by'] et [Keywords#clockwise 'clockwise']) :
{{{
definition defL1 means 
	avion turns anticlockwise by 10; 
}}}

==assign==
_Partie *Définitions*_
  * affecter une valeur à un attribut, elle doit correspondre au type de l'attribut (voir [Keywords#to 'to']) :
{{{
definition assigner means
	assign true to active of camera1,
	assign 10 to life of perso1,
	assign "Nom" to name of perso2;
}}}

==at==
_Partie *Description du jeu*_
  * assigner une valeur (numérique ou non) à un attribut de game (voir [Keywords#has 'has']) :
{{{
game has name at "mon jeu";
}}}
_Partie *Initialisations*_
  * assigner une valeur (numérique ou non) à un attribut d'une classe ou d'un objet (voir [Keywords#has 'has']) :
{{{
Character has life at 100; // tous les objets de type Character commenceront avec l'attribut life à 100
perso1 has life at 10; // la valeur fournie à l'attribut doit être de même type obligatoirement, ici, l'attribut 'life' est un nombre
perso2 has belonging at perso2; // ici, l'attribut belonging est un Object (Character hérite de Object)
}}}
_Partie *Définitions*_
  * générer un objet à une position bien précise (voir [Keywords#generate 'generate']) :
{{{
generate mario at 0 0 0;
}}}
<br />
----
[Keywords#A A]
=B=
[Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==backward==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'aller en arrière pour une translation (voir [Keywords#moves 'moves'], [Keywords#by 'by'] et [Keywords#forward 'forward']) :
{{{
definition bougerObjet means 
	objet moves backward by 10; // l'objet va reculer de 10
definition bougerMario means 
	mario moves backward by 10; // si mario (de type Character) a son attribut 'moveWithCamera' à true, il va se déplacer vers la caméra
}}}

==becomes==
_Parties *Règles du jeu*_
  * sert à déclencher des actions lorsque la valeur d'un attribut devient (ou ne devient plus) exactement une autre valeur (voir [Keywords#rule 'rule']) : 
{{{
rule value of jaugeForce becomes 10 then
	/*actions*/;
rule name of perso1 becomes "Nouveau nom" then
	/*actions*/;
}}}

==between==
_Parties *Initialisations* et *Définitions*_
  * définir les bornes d'un calcul ou d'une génération aléatoire (voir [Keywords#distance 'distance'], [Keywords#angle 'angle'], [Keywords#random 'random'] et [Keywords#and 'and']) :
{{{
distance between perso1 and perso2 > 10
angle between perso1 and perso2 > 10
random between 1 and 20 
// ces valeurs peuvent être assignées ou testées dans une condition
}}}

==brakes==
_Partie *Définitions*_
  * ordonner à l'entité désignée de freiner d'une valeur (voir [Keywords#by 'by']) :
{{{
definition freiner means 
	vaisseau brakes by 5; // la vitesse du vaisseau va décroître de 5
}}}

==by==
_Partie *Définitions*_
  * définit la valeur associée à un changement (voir [Keywords#jumps 'jumps'], [Keywords#moves 'moves'], [Keywords#turns 'turns'], [Keywords#accelerates 'accelerates'], [Keywords#brakes 'brakes'] et [Keywords#expels 'expels']) : 
{{{
mario jumps by 10;
mario moves forward by 10;
jeep accelerates by 10;
jeep brakes by 10;
yoshi expels goomba by 10;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B]
=C=
[Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==clockwise==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'effectuer une rotation dans le sens horaire (voir [Keywords#turns 'turns'], [Keywords#by 'by'] et [Keywords#anticlockwise 'anticlockwise']) :
{{{
definition defR1 means 
	avion turns clockwise by 10; 
}}}

==command==
_Partie *Commandes*_
  * déclarer la liste des commandes pour chaque joueur :
{{{
command for joueur1, joueur2 is    // les mêmes commandes sont autorisées pour deux joueurs si le mode tour par tour est actif (attribut 'turnbased' de game)
	mouse right for viserR,
	mouse left for viserL, // (voir 'mouse') commande souris ('up', 'down', 'right', 'lClick', 'mClick', 'rClick', 'scrollUp' ou 'scrollDown')
	key enter for tirer; // (voir 'key') commande clavier (lettre de 'A' à 'Z', 'up', 'down', 'left', 'right', 'space', 'escape' ou 'enter')   
}}}

==commands==
_Partie *Définitions*_
  * activer / désactiver l'ensemble des commandes pour le clavier et la souris (voir [Keywords#activate 'activate'], [Keywords#disable 'disable'], [Keywords#keyboard 'keyboard'] et [Keywords#mouse 'mouse']) :
{{{
activate commands
disable commands
}}}

==contains==
  * dans une condition, vérifier si un objet appartient à une liste (voir [Keywords#list 'list']) :
{{{
if elements of inventory1 contains arme1 then  // l'attribut 'elements' de inventory1 est une liste d'objets
	/*conséquence*/
endif;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C]
=D=
[Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==dead==
_Partie *Définitions*_
  * dans une condition, tester si l'entité ayant un attribut 'life' (ex : Character) est mort (si son attribut 'life' a atteint 0) :
{{{
if (perso is dead) // (voir 'is')
then /*conséquences*/
endif;
}}}

==defeat==
_Partie *Définitions*_
  * déclarer l'échec d'un joueur dans la partie (voir [Keywords#victory 'victory']) :
{{{
definition echec means 
	defeat of joueurPrincipal : "Echec du joueur pricipal !",  // il est possible d'afficher un message
	defeat of joueurAllie;
}}}

==definition==
_Partie *Définitions*_
  * déclarer un ensemble d'actions réutilisables plusieurs fois dans des règles du jeu ou des commandes différentes (voir [Keywords#means 'means']) : 
{{{
definition tirer means  // le nom 'tirer' pourra être appelé tel quel dans une règle du jeu
	bazooka expels missile by 100, 
	wait 200 ms then 
		generate missile 
	endwait;

command for joueur1 is
	key space for tirer;  // appel de tirer dans la règle du jeu

rule /*déclencheur*/ then
	tirer;  // appel de tirer dans la règle du jeu
}}}

==dies==
_Partie *Définitions*_
  * déclarer la mort d'un objet de type Character :
{{{
rule mario touches zoneDeVide then
	mario dies;
}}}
  * tester si l'objet de type Character vient juste de mourir :
{{{
rule mario dies then
	game ends;
}}}

==disable==
_Partie *Définitions*_
  * désactiver une commande ou toutes les commandes (voir [Keywords#activate 'activate'], [Keywords#keyboard 'keyboard'], [Keywords#mouse 'mouse'] et [Keywords#commands 'commands']) :
{{{
definition desactiverTout means
	disable commands;
definition desactiverPauseSeulement means 
	disable P; //désactive la touche P sur le clavier
}}}

==distance==
_Parties *Initialisations* et *Définitions*_
  * retourner la valeur de la distance entre deux objets (voir [Keywords#between 'between']) :
{{{
definition calculDistance means 
	if distance between perso1 and perso2 > 10 
	then perso2 dies
	endif;
}}}

==down==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'aller en bas pour une translation (voir [Keywords#moves 'moves'], [Keywords#by 'by'] et [Keywords#up 'up']) :
{{{
definition bougerHelico means 
	helico moves down by 10; // l'hélicoptère va descendre verticalement de 10
}}}
  * ordonner à l'entité désignée d'effectuer une rotation vers le bas (voir [Keywords#turns 'turns'], [Keywords#by 'by'] et [Keywords#up 'up']) :
{{{
definition incliner means 
	avion turns down by 10; // l'avion va s'incliner vers l'avant
}}}
_Partie *Commandes*_
  * indiquer une commande clavier, touche flèche du bas (voir [Keywords#key 'key']) :
{{{
key down for /*action*/;
}}}
  * indiquer une commande souris, déplacement du curseur vers le bas (voir [Keywords#mouse 'mouse']) :
{{{
mouse down for /*action*/;
}}}

==duplicable==
_Partie *Initialisations*_
  * Indique que l'objet peut être copié en plusieurs exemplaires lors d'un generate (voir [Keywords#generate 'generate']) : 
{{{
lapin is Character duplicable; 

// dans les définitions ensuite :
definition genererPlusieurslapins means 
	generate lapin on zone1;
	generate lapin on zone2; // un deuxième lapin sera généré, ils sont issus du même objet mais ont leurs propres déplacement, valeurs d'attributs, etc
}}}

==during==
_Partie *Définitions*_
  * poursuivre une action pendant un certain temps (voir [Keywords#until 'until']) :
{{{
goomba moves left by 5 during 2 sec;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D]
=E=
[Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==efface==
_Partie *Définitions*_
  * effacer un objet de la scène 3D (il reste en mémoire) (voir [Keywords#generate 'generate']) :
{{{
definition effacerPerso means
	efface perso1;
}}}

==effaced==
_Partie *Définitions*_
  * dans une condition, tester si l'entité n'a pas été générée ou n'est pas dans la scène 3D (voir [Keywords#if 'if'], [Keywords#generate 'generate'] et [Keywords#generated 'generated']) :
{{{
if (perso is generated) // (voir 'is')
then /*conséquences*/
endif;
}}}

==else==
_Partie *Définitions*_
  * le branchement conditionnel dans le cas où la condition du 'if' n'est pas respectée (voir [Keywords#if 'if'], [Keywords#then 'then'] et [Keywords#endif 'endif']). Il n'est pas oligatoire s'il ne s'avère pas nécessaire :
{{{
if /*condition*/
then /*conséquence 1 (condition respectée)*/
else /*conséquence 2 (condition non-repectée)*/ // si la condition n'est pas repectée : la conséquence 2 est exécutée à la place de la conséquence 1
endif;
}}}

==endif==
_Partie *Définitions*_
  * fermer une condition (voir [Keywords#if 'if'], [Keywords#then 'then'] et [Keywords#else 'else']). Cela sert à déterminer jusqu'où la condition va faire effet :
{{{
if /*condition*/
then 
	if /*condition*/
	then /*conséquence 1 (condition respectée)*/ 
			// pas de else
	endif 
else /*conséquence 2 (condition non-repectée)*/  // s'il n'y avait pas eu le 'endif', il aurait été impossible de déterminer à quelle condition appartenait ce 'else'
endif; 
}}}

==ends==
_Partie *Définitions*_
  * terminer le jeu :
{{{
definition finJeu means
	game ends;
definition finJeuMessage means
	game ends : "Fin du jeu !"; // le message à afficher est facultatif
}}}
  * arrêter un Chrono actif (voir [Keywords#starts 'starts'] et [Keywords#pause 'pause']) :
{{{
definition arrêtChrono means
	chrono1 ends : "Time's up." // le message à afficher est facultatif
}}}
_Partie *Règles du jeu*_
  * tester si un chrono vient juste de se terminer (voir [Keywords#starts 'starts']) :
{{{
rule chrono1 ends then
	/*actions*/
}}}

==endwait==
_Partie *Définitions*_
  * fermer une attente (voir [Keywords#wait 'wait']). Cela sert à repérer jusqu'à où l'attente va faire effet :
{{{
wait 5 s then
/*actions*/
endwait;

wait 5 s then
	wait 10 s then
	/*actions*/
	endwait,
	/*actions*/
endwait;
}}}

==enter==
_Partie *Commandes*_
  * indiquer une commande clavier, touche Entrée (voir [Keywords#key 'key']) :
{{{
key enter for /*action*/;
}}}

==equip==
_Partie *Définitions*_
  * équiper une entité de type Character avec un objet de son inventaire (voir [Keywords#previous 'previous'] et [Keywords#next 'next']) :
{{{
definition equiper means 
	perso1 equip arme1, //l'attribut 'equipedObject' de perso1 devient arme1
	perso1 equip next, //l'attribut 'equipedObject' de perso1 devient l'arme venat après arme1 dans la liste de son inventaire
	perso1 equip previous; //l'attribut 'equipedObject' de perso1 redevient arme1
}}}

==escape==
_Partie *Commandes*_
  * indiquer une commande clavier, touche Echap (voir [Keywords#key 'key']) :
{{{
key escape for /*action*/;
}}}

==expels==
_Partie *Définitions*_
  * ordonner à un objet d'en lâcher un autre qui lui appartient (voir [Keywords#has 'has'], [Keywords#ingests 'ingests'] et [Keywords#grasps 'grasps']) :
{{{
definition tirer means 
	batman expels missile by 20; // (voir 'by') l'objet est expulsé avec une force de 20
	// si le missile était n'était pas généré, il l'est avant d'être expulsé
definition lacher means 
	batman expels missile by 0; // sans force, l'objet est juste lâché
}}}
_Partie *Règles du jeu*_
  * tester si un objet vient juste d'en relâcher un autre (voir [Keywords#gets 'gets']) :
{{{
rules mario expels etoile then
	/*actions*/;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E]
=F=
[Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==finished==
_Partie *Définitions*_
  * dans une condition, tester si un Chrono est arrêté (voir [Keywords#if 'if']) :
{{{
if (chrono1 is finished) // (voir 'is')
then /*conséquences*/
endif;
}}}

==first==
_Partie *Initialisations*_
  * définir le point de vue de camera à la première personne, pour un jeu de type FPS par exemple (voir [Keywords#is 'is']) :
{{{
cam1 is camera first person;
}}}
_Parties *Définitions*_
  * désigner le premier élément d'une liste (voir [Keywords#list 'list']) :
{{{
first of list1
}}}

==for==
_Parties *Commandes*_
  * désigner le (ou les joueurs dans le cas d'un jeu en tour par tour) agissant sur la liste de commandes :
{{{
command for player1 is // un seul joueur
	/*commandes*/;
command for player1, player2 is // deux joueurs
	/*commandes*/;
}}}
  * désigner l'action associée à une commande (voir [Keywords#command 'command']) :
{{{
key space for /*action*/;
}}}

==forward==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'aller en avant pour une translation (voir [Keywords#moves 'moves'], [Keywords#by 'by'] et [Keywords#backward 'backward']) :
{{{
definition bougerObjet means 
	objet moves forward by 10; // l'objet va avancer de 10
definition bougerMario means 
	mario moves forward by 10; // si mario (de type Character) a son attribut 'moveWithCamera' à true, il va s'éloigner de la caméra
}}}

==frame(s)==
_Parties *Initialisations* et *Définitions*_
  * l'une des unités de temps disponibles, l'image (voir [Keywords#min 'min'], [Keywords#S 's'] et [Keywords#ms 'ms']) :
{{{
chrono1 has end at 100 frames //la fin du chrono est à 100 image, à 25 images par secondes, cela fait environ 4 secondes
}}}

==free==
_Partie *Initialisations*_
  * définir le point de vue de camera sans contraintes sur celle-ci (voir [Keywords#is 'is']) :
{{{
cam1 is camera free;
}}}

==from==
_Parties *Initialisations* et *Définitions*_ (voir [Keywords#list 'list'] et [Keywords#revove 'remove'])
  * pour désigner le nom de la liste lorsqu'on lui retire un élément :
{{{
remove elt1 from liste1; // l'élément doit exister et être dans la liste désignée
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F]
=G=
[Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==game==
_Partie *Description du jeu*_
  * le mot-clé pour définir les attributs principaux de jeu. Ses attributs sont 'gravity', 'world', 'gridsize', 'name', 'turnbased' et 'ranking' :
{{{
game has gravity at 10, name at "Mon Jeu"; 
}}}

==generate==
_Partie *Définitions*_
  * faire apparaître un objet dans l'environnement 3D (voir [Keywords#game 'game']) :
{{{
definition depart means
	generate sol,
	generate zoneDepart,
	generate mario;

// il est possible de générer un objet à un endroit précis
definition genMario means
	generate sol at 0 0 20, // à une position bien précise
	generate zoneDepart on sol, // au dessus d'un objet (position aléatoire ensuite)
	generate mario in zoneDepart; // à l'intérieur d'une zone (position aléatoire ensuite)

// un objet duplicable peut être généré en plusieurs exemplaires d'un coup (voir 'duplicable')
definition genGoombas means
	generate 3 goombas on sol;
}}}

==generated==
_Partie *Définitions*_
  * dans une condition, tester si un objet est présent dans l'environnement 3D (voir [Keywords#generate 'generate']) :
{{{
definition objetExiste means
	if objet1 is generated then
		/*conséquence*/
	endif;
}}}

==generic==
_Partie *Description du jeu*_
  * type d'environnement (map) général sans spécification spéciale (voir [Keywords#world 'world'], [Keywords#grid 'grid'] et [Keywords#ribbon 'ribbon']) :
{{{
game has world at generic;
}}}

==gets==
_Partie *Règles du jeu*_
  * tester si un objet vient juste d'en obtenir un autre par l'intermédiaire de ingests ou grasps (voir [Keywords#ingests 'ingests'], [Keywords#grasps 'grasps'] et [Keywords#expels 'expels']) :
{{{
rules mario gets etoile then
	/*actions*/;
}}}
==grasps==
_Partie *Définitions*_
  * ordonner à un objet d'en attraper un autre pour le faire sien (voir [Keywords#has 'has'], [Keywords#ingests 'ingests'] et [Keywords#expels 'expels']):
{{{
definition entrerDansVoiture means 
	voiture grasps perso1; // c'est la voiture qui attrape le personnage afin de le conduire quelque part
}}}

==gravity==
_Partie *Description du jeu*_
  * définir la gravité de l'environnement. la gravité peut être définie par un vecteur (trois chiffre float) ou un chiffre (gravité vers bas) :
{{{
game has gravity at 1 1 1;
}}}

==grid==
_Partie *Description du jeu*_
  * type de d'environnement (map) découpé en cases de taille fixée par l'attribut gridsize (voir [Keywords#world 'world'], [Keywords#generic 'generic'], [Keywords#ribbon 'ribbon'] et [Keywords#gridsize 'gridsize']) :
{{{
game has world at grid;
}}}

==gridsize==
_Partie *Description du jeu*_
  * définir la taille de chaque case dans le cas d'un jeu de type grille (voir [Keywords#world 'world'] et [Keywords#grid 'grid']) :
{{{
game has gridsize at 12;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G]
=H=
[Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==happens==
  * poursuivre une action jusqu'à ce qu'un événement se déclenche (voir [Keywords#until 'until']) :
{{{
mario moves forward until 
	mario touches zone1 happens;
}}}

==has==
_Partie *Description du jeu*_
  * spécifier les attributs de game (voir [Keywords#at 'at']) :
{{{
game has name at "mon jeu";
}}}
_Partie *Initialisations*_
  * accéder à un attribut existant d'une classe ou d'un objet pour le définir (voir [Keywords#at 'at']) :
{{{
Character has life at 100; // tous les objets de type Character commenceront avec l'attribut life à 100
perso1 has life at 10; // l'objet perso1 (de type Character commenceront avec l'attribut life à 100
perso1 has life at life of perso2; // l'attribut life de perso1 se basera sur l'attribut life de perso2
}}}
  * déclarer un nouvel attribut n'appartenant pas déjà à une classe (voir [Keywords#at 'at']) :
{{{
Character has mon_attribut_1 at 100; // l'attribut nommé 'mon_attribut_1' n'existe pas dans la classe Character, tous les objets de type Character commenceront avec cet attribut initialisé à 20
perso1 has mon_attribut_2 at 20; // perso1 est de type Character, l'attribut nommé 'mon_attribut_2' n'existant pas dans cette classe, perso1 commencera avec cet attribut initialisé à 50
perso1 has mon_attribut_3 at "texte1"; // une chaîne de caractère peut être ajoutée (entre guillemets obligatoirement)
}}}
  * faire qu'un objet s'approprie un autre objet et lui donne des contraintes de parenté :
{{{
perso1 has arme1; // l'objet perso1 s'approprie l'objet arme1 (son attribut belonging devient 'true')
}}}
_Partie *Définitions*_
  * dans une condition, tester l'appartenance d'un objet pour un autre (voir [Keywords#if 'if']) :
{{{
if perso1 has arme1
then /*conséquence*/
endif; // l'objet perso1 s'approprie l'objet arme1 (son attribut belonging devient 'true')
}}}

==held==
_Partie *Commandes*_
  * préciser qu'une commande s'effectue lorsqu'une touche du clavier est maintenue enfoncée (voir [Keywords#key 'key'], [Keywords#pressed 'pressed'] et [Keywords#released 'released']) :
{{{
command for player is 
	key up held for /*action*/; // 'held' n'est pas obligatoire
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H]
=I=
[Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==if==
_Partie *Définitions*_
  * exprimer un choix avec une condition (voir [Keywords#then 'then'], [Keywords#else 'else'] et [Keywords#endif 'endif']) :
{{{
if /*condition*/ // si la condition est repectée les actions après le 'then' seront exécutées
then /*conséquence (condition respectée)*/
endif; // fin, condition repectée ou non

if /*condition 1*/ 
then /*(condition respectée)*/
	if /*condition 2*/ // d'autre conditions peuvent être imbriquées
	then /*conséquence (condition respectée)*/
	endif; 
endif; 

if /*condition*/ // si la condition est repectée les actions après le 'then' seront exécutées sinon ce sont celles après le 'else' qui le seront
then /*conséquence 1 (condition respectée)*/
else /*conséquence 2 (condition non-repectée)*/ 
endif;
}}}

==in==
_Partie *Initialisations*_
  * désigner une liste lorsqu'on y accède :
{{{
assign 5 to life of num 3 in list1 // la liste doit contenir au moins 3 éléments et les attributs appelés doivent exister
}}}
  * désigner une liste lorsqu'on y place un nouvel élément (voir [Keywords#insert 'insert']) :
{{{
insert arme1 in list1; 
}}}
_Partie *Définitions*_
  * désigner une liste lorsqu'on y place un nouvel élément (voir [Keywords#insert 'insert'] et [Keywords#ingests 'ingests']) :
{{{
insert arme1 in list1; 
yoshi ingests ennemi1 in inventaireEnnemis;
}}}
  * générer un objet à l'intérieur d'une zone (voir [Keywords#generate 'generate']):
{{{
generate mario in zoneDepart;
}}}

==ingests==
_Partie *Règles du jeu*_
  * ordonner à un objet d'en prendre un autre qui ne lui appartient pas (voir [Keywords#has 'has'], [Keywords#grasps 'grasps'] et [Keywords#expels 'expels']), l'objet pris est effacé et mis dans un inventaire :
{{{
definition placeBook means 
	perso1 ingests book1 in inventaireLibrairie;
}}}

==insert==
_Parties *Initialisations* et *Définitions*_
  * placer un objet dans une liste (voir [Keywords#list 'list'], [Keywords#in 'in'] et [Keywords#remove 'remove']) :
{{{
insert arme1 in list1 num 2; // (voir 'num') l'objet arme1 sera placé à la deuxième place dans la liste list1 (la dernière place si le nombre d'éléments est plus petit)
insert arme1 in list1; // l'objet arme1 sera placé à la fin de la liste list1
}}}

==invert==
_Partie *Définitions*_
  * intervertir les valeurs de deux attributs (voir [Keywords#with 'with']) :
{{{
definition intervertir means 
	invert speed of mario with speed of luigi;
}}}

==is==
_Partie *Déclaration de nouveaux types*_
  * déclarer un nouveau type (une nouvelle classe) (voir [Keywords#type 'type']) :
{{{
type Plombier is Character; // le type doit déjà exister ou avoir été défini plus haut dans le code de la même manière
type SuperPlombier is Plombier and Weapon; // on peut déclarer de nouveaux types qui sont composés de plusieurs déjà existant
}}}
_Partie *Initialisations*_
{{{
mario is Plombier; // le type doit exister
}}}
_Partie *Définitions*_ 
  * tester l'état d'un objet selon son type dans une condition (voir [Keywords#if 'if']) :
{{{
if audio1 is started then /*conséquences*/ endif; // (voir 'started') pour un objet de type Media
if perso1 is dead then /*conséquences*/ endif; // (voir 'dead') pour un objet de type Character
}}}
_Partie *Commandes*_
  * déclarer une commmande : se place après la déclaration (voir [Keywords#command 'command'] et [Keywords#for 'for']) :
{{{
command objet1 for player1 is definition1;
}}}
_Partie *Intelligence Artificielle*_ 
  * préciser le nom d'une règle du jeu (voir [Keywords#ai 'ai']) :
{{{
ai nom_ia is /*conséquences*/ ; 
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I]
=J=
[Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==jumps==
_Partie *Définitions*_
  * ordonner à un personnage de sauter en indiquant la puissance (voir [Keywords#by 'by']) :
{{{
superGoomba jumps by 5;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J]
=K=
[Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==key==
_Partie *Commandes*_
  * déclarer une commande liée clavier (voir [Keywords#command 'command'] et [Keywords#mouse 'mouse']), les commandes sont : lettre de 'A' à 'Z', 'up', 'down', 'left', 'right', 'space', 'escape' ou 'enter' :
{{{
command for joueur1 is
	key left for bougerJeepGauche,
	key right for bougerJeepDroite;
}}}

==keyboard==
_Partie *Définitions*_
  * activer / désactiver l'ensemble des commandes pour le clavier seulement (voir [Keywords#activate 'activate'], [Keywords#disable 'disable'], [Keywords#mouse 'mouse'] et [Keywords#commands 'commands']) :
{{{
activate keyboard
disable keyboard
}}}

==killed==
_Partie *Règles du jeu*_
  * tester si une entité de type Character est tuée par une autre :
{{{
rule mario is killed by goomba then
	/*actions*/;
}}}

==kills==
_Partie *Définitions*_
  * déclarer qu'une entité en a tuée une autre de type Character :
{{{
mario kills goomba;
}}}
_Partie *Règles du jeu*_
  * tester si une entité en tue une autre de type Character :
{{{
rule mario kills goomba then
	/*actions*/;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K]
=L=
[Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==last==
_Partie *Définitions*_
  * désigner le dernier élément d'une liste (voir [Keywords#list 'list']) :
{{{
last of list1
}}}


==lclick==
_Partie *Commandes*_
  * indiquer une commande souris, clic gauche (voir [Keywords#mouse 'mouse']) :
{{{
mouse lclick for /*action*/;
}}}

==left==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'aller à gauche pour une translation (voir [Keywords#moves 'moves'], [Keywords#by 'by'] et [Keywords#right 'right']) :
{{{
definition bougerObjet means 
	objet moves left by 10; // l'objet va se décaler sur sa gauche de 10
definition bougerMario means 
	mario moves left by 10; // si mario (de type Character) a son attribut 'moveWithCamera' à true, il va se déplacer vers la gauche de l'écran
}}}
  * ordonner à l'entité désignée d'effectuer une rotation vers la gauche (voir [Keywords#turns 'turns'], [Keywords#by 'by'] et [Keywords#right 'right']) :
{{{
definition tournerMario means 
	mario turns left by 10; // mario va tourner à gauche
}}}
_Partie *Commandes*_
  * indiquer une commande clavier, touche flèche de gauche (voir [Keywords#key 'key']) :
{{{
key left for /*action*/;
}}}
  * indiquer une commande souris, déplacement du curseur vers la gauche (voir [Keywords#mouse 'mouse']) :
{{{
mouse left for /*action*/;
}}}

==list==
_Partie *Initialisations*_
  * regrouper et ordonner des éléments en créant une liste d'entités :
{{{
listeEnnemie is list of goomba1, goomba2, goomba3;
}}}

==loop==
_Partie *Initialisations*_
  * indiquer qu'un Media est interprété en boucle (voir [Keywords#is 'is'] et [Keywords#once 'once']) :
{{{
musiqueAmbiance is Media loop;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L]
=M=
[Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==mclick==
_Partie *Commandes*_
  * indiquer une commande souris, clic du bonton central (molette) s'il y en a un (voir [Keywords#mouse 'mouse']) :
{{{
mouse mclick for /*action*/;
}}}

==means==
_Partie *Définitions*_
  * déclarer une définition : se place après la déclaration :
{{{
definition bougerJeep means
	jeep moves forward by 10;
}}} 

==min==
_Parties *Initialisations* et *Définitions*_
  * l'une des unités de temps disponibles, la minute (voir [Keywords#frame(s) 'frame(s)'], [Keywords#S 's'] et [Keywords#ms 'ms'])
{{{
chrono1 has end at 1 min
}}}

==mouse==
_Partie *Définitions*_
  * activer / désactiver l'ensemble des commandes pour la souris seulement (voir [Keywords#activate 'activate'], [Keywords#disable 'disable'], [Keywords#keyboard 'keyboard'] et [Keywords#commands 'commands']) :
{{{
activate mouse
disable mouse
}}}
_Partie *Commandes*_
  * déclarer une commande liée à la souris (voir [Keywords#command 'command'] et [Keywords#key 'key']), les commandes sont 'up', 'down', 'right', 'lClick', 'mClick', 'rClick', 'scrollUp' ou 'scrollDown' :
{{{
command for joueur1 is
	mouse down for seBaisser,
	mouse rclick for tirer;
}}}

==moves==
_Partie *Définitions*_
  * déclarer un déplacement (voir [Keywords#right 'right'], [Keywords#left 'left'], [Keywords#forward 'forward'], [Keywords#backward 'backward'] et [Keywords#turns 'turns']) :
{{{
definition bougerObjet means 
	objet moves backward by 10;
}}}
  * tester si un objet vient juste de bouger :
{{{
rule mario moves then
	/*actions*/;
}}}

==moving==
_Partie *Définitions*_
  * dans une condition, tester si un objet est en train de bouger :
{{{
if mario is moving 
then /*conséquence*/
endif;
}}}

==ms==
_Parties *Initialisations* et *Définitions*_
  * l'une des unités de temps disponibles, la milliseconde (voir [Keywords#frame(s) 'frame(s)'], [Keywords#min 'min'] et [Keywords#S 's'])
{{{
chrono1 has end at 750 ms
}}}

==mute==
_Partie *Définitions*_
  * désactiver le son d'un Media (voir [Keywords#on 'on'] et [Keywords#off 'off']) :
{{{
definition desactiverMusique means
	mute on mediaMusique; // désactive le son du média
	mute off mediaMusique; // active le son du média
}}}

==muted==
_Partie *Règles du jeu*_
  * dans une condition, tester si le son du Media a été coupé (voir [Keywords#mute 'mute'], [Keywords#on 'on'] et [Keywords#off 'off']) :
{{{
if musiqueAmbiance is muted on // ou bien 'muted off'
then /*conséquence*/
endif;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M]
=N=
[Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==name==
_Partie *Description du jeu*_
  * définir le nom du jeu (voir [Keywords#game 'game']) :
{{{
game has name at "Mon jeu";
}}}

==next==
_Partie *Définitions*_
  * équiper une entité de type Character avec l'objet de son inventaire venant après l'objet déjà équipé (voir [Keywords#equip 'equip'] et [Keywords#previous 'previous']) :
{{{
definition equiper means 
	perso1 equip next; //l'attribut 'equipedObject' de perso1 devient l'objet suivant
}}}

==nexturn==
_Partie *Définitions*_
  * déclarer le tour du joueur suivant lors d'un jeu en tour par tour (voir [Keywords#game 'game'] et [Keywords#turnbased 'turnbased']) :
{{{
nexturn joueur2;
}}}

==not==
_Partie *Définitions*_
  * dans une condition, exprimer la négation logique (voir [Keywords#and 'and'] et [Keywords#or 'or']):
{{{
definition genererMario means
	if mario is not generated then // dans une condition
		generate mario
	endif;

definition destroyMario means
	if not (mario is not generated or mario is dead) then // équivaut à "s'il est généré et en vie", il est possible d'en mettre autant que nécessaire
		destroy mario
	endif;
}}}

==num==
_Parties *Initialisations* et *Définitions*_
  * accéder à l'élément d'une liste à partir de sa position (voir [Keywords#list 'list'] et [Keywords#in 'in']) :
{{{
name of num 1 in listeDesPersos; // accès à l'attribut nom du premier élément de la liste 'listeDesPersos'
insert arme1 in list1 num 2; // (voir 'insert')
remove num 1 from liste1; // (voir 'remove')
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N]
=O=
[Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==of==
_Partie *Initialisations*_
  * énumérer le contenu d'une liste à sa création (voir [Keywords#is 'is'] et [Keywords#list 'list']) :
{{{
liste1 is list of perso1, perso2, perso3;
}}}
_Parties *Définitions* et *Règles du jeu*_
  * accéder en cascade aux attributs d'un objet ou d'une classe :
{{{
life of perso1
x of position of perso1 // x est un attribut de position et position est un attribut de perso1
}}}
  * indiquer quelle Team ou quel Player est en condition de victoire ou de défaite (voir [Keywords#victory 'victory'] et [Keywords#defeat 'defeat']) :
{{{
victory of team1; 
defeat of player1; 
}}}

==off==
_Partie *Définitions*_
  * réactiver le son d'un Media (voir [Keywords#mute 'mute'] et [Keywords#on 'on']) :
{{{
definition activerMusique means
	mute off mediaMusique; // réactive le son du média
}}}
_Partie *Règles du jeu*_
  * dans une condition, tester si le son du Media a été réactivé (voir [Keywords#muted 'muted'] et [Keywords#on 'on']) :
{{{
if musiqueAmbiance is muted off
then /*conséquence*/
endif;
}}}

==on==
_Partie *Définitions*_
  * désactiver le son d'un Media (voir [Keywords#mute 'mute'] et [Keywords#off 'off']) :
{{{
definition desactiverMusique means
	mute on mediaMusique; // désactive le son du média
}}}
_Partie *Règles du jeu*_
  * dans une condition, tester si le son du Media a été coupé (voir [Keywords#muted 'muted'] et [Keywords#off 'off']) :
{{{
if musiqueAmbiance is muted on
then /*conséquence*/
endif;
}}}

==or==
_Partie *Définitions*_
  * combiner plusieurs sous conditions à l'intérieur d'une condition (voir [Keywords#if 'if'], [Keywords#and 'and'] et [Keywords#not 'not']) :
{{{
if (life of perso1 = 0 or life of perso2 >= 5) //une seul des deux conditions doit être vraie pour pouvoir accéder à la conséquence (dans le then)
then /*conséquences*/
endif;
}}}

==orientation==
_Parties *Initialisations* et *Définitions*_
  * l'attribut d'un objet de type Empty (ou de ses dérivés), correspondant à son orientation dans l'environnement 3D selon son référentiel (le référentiel peut être un objet) (voir [Keywords#position 'position'] et [Keywords#size 'size']) :
{{{
objet1 has orientation at 90 0 180; // l'orientation de l'objet est de 90 autour de l'axe x, 0 autour de l'axe y et 180 autour de l'axe z
}}}

==other==
_Partie *Règles du *_
l'a t'on gardé ?
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O]
=P=
[Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==pause==
_Partie *Définitions*_
  * stopper le jeu temporairement :
{{{
definition pauseOn means
	game pause; // une fois le jeu mis en pause, il est possible de reprendre la partie avec le menu contextuel
}}}
  * stopper un Chrono temporairement (voir [Keywords#starts 'starts'] et [Keywords#ends 'ends']) :
{{{
definition stopperChrono means
	chrono1 pause;
}}}
  * stopper un Media temporairement (voir [Keywords#play 'play'] et [Keywords#stop 'stop']) :
{{{
definition stopperMedia means
	pause musiqueAmbiance;
}}}

==paused==
_Partie *Définitions*_
  * dans une condition, tester si un Media est arrêté temporairement (voir [Keywords#if 'if']) :
{{{
if musiqueAmbiance is paused
then /*conséquences*/
endif;
}}}
  * dans une condition, tester si un Chrono est arrêté temporairement (voir [Keywords#if 'if']) :
{{{
if chrono1 is paused
then /*conséquences*/
endif;
}}}

==person==
_Partie *Initialisations*_
  * définir le point de vue de la camera à la première personne ou à la troisième personne (voir [Keywords#first 'first'] et [Keywords#third 'third']):
{{{
cam1 is camera first person;
cam2 is camera third person;
}}}

==play==
  * lancer ou relancer un Media arrêté (voir [Keywords#pause 'pause'] et [Keywords#stop 'stop']) :
{{{
definition jouerMedia means
	play musiqueAmbiance;
}}}

==played==
_Partie *Définitions*_
  * dans une condition, tester si un Media est actif (voir [Keywords#if 'if']) :
{{{
if musiqueAmbiance is played
then /*conséquences*/
endif;
}}}

==position==
_Parties *Initialisations* et *Définitions*_
  * l'attribut d'un objet de type Empty (ou de ses dérivés), correspondant à sa position dans l'environnement 3D selon son référentiel (le référentiel peut être un objet) (voir [Keywords#orientation 'orientation'] et [Keywords#size 'size']) :
{{{
objet1 has position at 0 10 20; // la position de l'objet est de 0 sur l'axe x, 10 sur l'axe y et 20 sur l'axe z
}}}

==pressed==
_Partie *Commandes*_
  * préciser qu'une commande s'effectue lorsqu'une touche du clavier est juste pressée une fois (voir [Keywords#key 'key'], [Keywords#held 'held'] et [Keywords#released 'released']) :
{{{
command for player is 
	key up pressed for /*action*/, // 'pressed' n'est pas obligatoire
	key up for /*action*/; // ne rien mettre équivaut à pressed
}}}

==previous==
_Partie *Définitions*_
  * équiper une entité de type Character avec l'objet de son inventaire venant avant l'objet déjà équipé (voir [Keywords#equip 'equip'] et [Keywords#next 'next']) :
{{{
definition equiper means 
	perso1 equip previous; //l'attribut 'equipedObject' de perso1 devient l'objet précédent
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P]
=Q=
[Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q]
=R=
[Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==random==
_Parties *Initialisations* et *Définitions*_
  * donner une valeur aléatoire entre deux valeur numériques, ces valeurs peuvent être des attributs (voir [Keywords#between 'between'] et [Keywords#and 'and']) :
{{{
random between 0 and 1 // donne soit 0 soit 1
random between life of perso1 and life of perso2 // les deux attributs doivent être numériques
}}}

==ranking==
_Partie *Description du jeu*_
  * établir un classement final des joueurs sous la forme d'une liste (voir [Keywords#game 'game'] et [Keywords#list 'list']) :
{{{
game has ranking at joueur1, joueur2;
}}}

==rclick==
_Partie *Commandes*_
  * indiquer une commande souris, clic droit (voir [Keywords#mouse 'mouse']) :
{{{
mouse rclick for /*action*/;
}}}

==released==
_Partie *Commandes*_
  * préciser qu'une commande s'effectue lorsqu'une touche du clavier relâchée (voir [Keywords#key 'key'], [Keywords#pressed 'pressed'] et [Keywords#held 'held']) :
{{{
command for player is 
	key up released for /*action*/; // 'released' n'est pas obligatoire
}}}

==remove==
_Parties *Initialisations* et *Définitions*_ 
  * pour retire un élément d'une liste (voir [Keywords#list 'list'], [Keywords#from 'from'] et [Keywords#insert 'insert']) :
{{{
remove num 1 from liste1; // l'élément doit exister et être dans la liste désignée
remove first from liste1; // (voir 'first') supprime le premier élément si la liste n'est pas vide
remove last from liste1; // (voir 'last') supprime le dernier élément si la liste n'est pas vide
}}}

==ribbon==
_Partie *Description du jeu*_
  * type d'environnement (map) adapté aux jeux linéaires (voir [Keywords#world 'world'], [Keywords#generic 'generic'] et [Keywords#grid 'grid']) :
{{{
game has world at ribbon;
}}}

==right==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'aller à droite pour une translation (voir [Keywords#moves 'moves'], [Keywords#by 'by'] et [Keywords#left 'left']) :
{{{
definition bougerObjet means 
	objet moves right by 10; // l'objet va se décaler sur sa droite de 10
definition bougerMario means 
	mario moves right by 10; // si mario (de type Character) a son attribut 'moveWithCamera' à true, il va se déplacer vers la droite de l'écran
}}}
  * ordonner à l'entité désignée d'effectuer une rotation vers la droite (voir [Keywords#turns 'turns'], [Keywords#by 'by'] et [Keywords#left 'left']) :
{{{
definition tournerMario means 
	mario turns right by 10; // mario va tourner à droite
}}}
_Partie *Commandes*_
  * indiquer une commande clavier, touche flèche de droite (voir [Keywords#key 'key']) :
{{{
key right for /*action*/;
}}}
  * indiquer une commande souris, déplacement du curseur vers la droite (voir [Keywords#mouse 'mouse']) :
{{{
mouse right for /*action*/;
}}}

==rule==
_Parties *Règles du jeu*_
  * définir une règles du jeu. Chaque règle a besoin d'un déclencheur et est déclenchée en parallèle. À l'intérieur, chaque action (nom de définition) est éxécutée en série :
{{{
rule Game starts then
	/*action 1*/,
	/*action 2*/,
	/*action n*/;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R]
=S=
[Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==s==
_Parties *Initialisations* et *Définitions*_
  * l'une des unités de temps disponibles, la seconde (voir [Keywords#frame(s) 'frame(s)'], [Keywords#min 'min'] et [Keywords#ms 'ms']) :
{{{
chrono1 has end at 10 s
}}}

==save==
_Partie *Définitions*_
  * enregistrer le jeu :
{{{
definition sauverJeu means
	save;
}}}

==scrollDown==
_Partie *Commandes*_
  * indiquer une commande souris, un cran de molette vers le bas (voir [Keywords#mouse 'mouse']) :
{{{
mouse scrollDown for /*action*/;
}}}

==scrollUp==
_Partie *Commandes*_
  * indiquer une commande souris, un cran de molette vers le haut (voir [Keywords#mouse 'mouse']) :
{{{
mouse scrollUp for /*action*/;
}}}

==size==
_Parties *Initialisations* et *Définitions*_
  * l'attribut d'un objet de type Empty (ou de ses dérivés), correspondant à sa taille selon son référentiel (le référentiel peut être un objet) (voir [Keywords#position 'position'] et [Keywords#orientation 'orientation']) :
{{{
objet1 has size at 1 2 3; // la taille de l'objet est de 1 sur l'axe x, 2 sur l'axe y et 3 sur l'axe z
}}}

==solo==
_Partie *Initialisations*_
  * déclarer que joueur n'a personne d'autre que lui dans son équipe (voir [Keywords#is 'is']) :
{{{
player1 is Player solo; // le nom de l'équipe de 'joueur1' est 'joueur1'
}}}

==space==
_Partie *Commandes*_
  * indiquer une commande clavier, touche Espace (voir [Keywords#key 'key']) :
{{{
key space for /*action*/;
}}}

==started==
  * dans une condition, tester si un Chrono est actif (voir [Keywords#if 'if']) :
{{{
if chrono1 is started
then /*conséquences*/
endif;
}}}

==starts==
_Partie *Définitions*_
  * lancer ou relancer un Chrono arrêté (voir [Keywords#pause 'pause'] et [Keywords#ends 'ends']) :
{{{
definition demarrerChrono means
	chrono1 starts;
}}}
_Partie *Règles du jeu*_
  * tester si le jeu vient juste de démarrer :
{{{
rule game starts then
	/*action de début du jeu*/;
}}}
  * tester si un Chrono vient juste de démarrer :
{{{
rule chrono1 starts then
	/*action*/;
}}}

==stop==
_Partie *Définitions*_
  * arrêter un Media (voir [Keywords#play 'play'] et [Keywords#pause 'pause']) :
{{{
definition stopperMedia means
	stop musiqueAmbiance;
}}}

==stopped==
_Partie *Définitions*_
  * dans une condition, tester si un Media n'est pas actif (voir [Keywords#if 'if']) :
{{{
if musiqueAmbiance is stopped
then /*conséquences*/
endif;
}}}

==sub==
_Partie *Définitions*_
  * soustraire une valeur à un attribut numérique (voir [Keywords#to 'to'] et [Keywords#add 'add']) : 
{{{
definition prendreVie means 
	sub 30 to life of batman; // l'attribut 'life' de l'entité batman de type Character va baisser de 30
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S]
=T=
[Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==then==
_Partie *Définitions*_
  * déclarer une condition (voir [Keywords#if 'if']) : se place après la déclaration :
{{{
if /*condition*/ then
then /*conséquences*/
endif;
}}} 
  * déclarer une attente (voir [Keywords#wait 'wait']) : se place après la déclaration :
{{{
wait 5 s then
/*actions*/
endwait;
}}} 
_Partie *Règles du jeu*_
  * déclarer une règle du jeu (voir [Keywords#rule 'rule']) : se place après la déclaration :
{{{
rule /*déclencheur*/ then
	/*actions*/;
}}}

==third==
_Partie *Initialisations*_
  * définir le point de vue de camera à la troisième personne, pour un jeu de type plateforme par exemple (voir [Keywords#is 'is']) :
{{{
cam1 is camera third person;
}}}

==to==
_Parties *Initialisations* et *Définitions*_
  * désigner l'attribut d'un objet lors d'une opération mathématique ou d'une assignation (voir [Keywords#add 'add'], [Keywords#sub 'sub'] et [Keywords#assign 'assign']) :
{{{
definition toucherLapin means
    sub 1 to life of lapin1,
	assign "Lapin n°2" to name of lapin2;
}}}

==touched==
_Parties *Règles du jeu*_
  * tester si une entité entre en contact avec une autre ou avec une zone :
{{{
rule mario is touched by goomba then 
	/*actions*/;
}}}

==touches==
_Parties *Règles du jeu*_
  * tester si une entité entre en contact avec une autre ou avec une zone :
{{{
rule mario touches goomba then 
	/*actions*/;
}}}

==touching==
_Partie *Définitions*_
  * dans une condition, teste si une entité est en train d'en toucher une autre ou une zone (voir [Keywords#if 'if'] et [Keywords#is 'is']) :
{{{
if mario is touching zoneDepart
then /*conséquence*/
endif;
}}}

==turns==
_Partie *Définitions*_
  * déclarer une rotation (voir [Keywords#right 'right'], [Keywords#left 'left'], [Keywords#clockwise 'clockwise'], [Keywords#anticlockwise 'anticlockwise'] et [Keywords#moves 'moves']) :
{{{
definition faireAvancerAiguille means 
	aiguille turns clockwise by 10;
}}}

==turnbased==
_Partie *Description du jeu*_
  * définir le type de jeu : temps réel ou tour par tour (voir [Keywords#game 'game']) :
{{{
game has turn based at true;
}}}

==type==
_Partie *Déclaration de nouveaux types*_
  * créer un nouveau type d'entités issu d'un ou de plusieurs autres. Les objets ensuite créés avec ce type, auront les mêmes attributs que les types de base ont :
{{{
type EpeeFlingue is Sword and Weapon;  // les objets créés avec ce nouveau type auront les attributs de Sword et de Weapon
type EpeeFlingueEnnemis is EpeeFlingue and Character; // ce nouveau type aura les attributs de Sword, Weapon et Character
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T]
=U=
[Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==up==
_Partie *Définitions*_
  * ordonner à l'entité désignée d'aller en haut pour une translation (voir [Keywords#moves 'moves'], [Keywords#by 'by'] et [Keywords#down 'down']) :
{{{
definition bougerHelico means 
	helico moves up by 10; // l'hélicoptère va monter verticalement de 10
}}}
  * ordonner à l'entité désignée d'effectuer une rotation vers le haut (voir [Keywords#turns 'turns'], [Keywords#by 'by'] et [Keywords#down 'down']) :
{{{
definition incliner means 
	avion turns up by 10; // l'avion va s'incliner vers l'arrière
}}}
_Partie *Commandes*_
  * indiquer une commande clavier, touche flèche du haut (voir [Keywords#key 'key']) :
{{{
key up for /*action*/;
}}}
  * indiquer une commande souris, déplacement du curseur vers le haut (voir [Keywords#mouse 'mouse']) :
{{{
mouse up for /*action*/;
}}}

==until==
_Partie *Définitions*_
  * poursuivre une action jusqu'à ce qu'un événement se déclenche (voir [Keywords#happens 'happens'] et [Keywords#during 'during']) :
{{{
mario moves forward until 
	mario touches zone1 happens;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U]
=V=
[Keywords#W W] - [Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==victory==
_Partie *Définitions*_
  * déclarer la victoire d'un joueur dans la partie (voir [Keywords#defeat 'defeat']) :
{{{
definition victoire means 
	victory of joueurPrincipal : "Victoire du joueur pricipal !",  // il est possible d'afficher un message
	victory of joueurAllie;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V]
=W=
[Keywords#X X] - [Keywords#Y Y] - [Keywords#Z Z]
----
==wait==
_Partie *Définitions*_
  * arrêter une action pour un temps défini, les actions placée à l'intérieur s'effectuent après cette attente (voir [Keywords#endwait 'endwait']) :
{{{
wait 5 s then
/*actions*/
endwait;

wait 5 s then
	wait 10 s then
	/*actions*/
	endwait;
endwait;
}}}

==waiting==
_Partie *Définitions*_
  * dans une condition, tester si une entité est fixe (sa position est la même) :
{{{
if mario is waiting
then /*conséquences*/
endif;
}}}

==with==
_Partie *Définitions*_
  * intervertir les valeurs de deux attributs (voir [Keywords#invert 'invert']) :
{{{
definition intervertir means 
	invert speed of mario with speed of luigi;
}}}

==world==
_Partie *Description du jeu*_
  * spécifier l'environnement du jeu (voir [Keywords#game 'game'], [Keywords#generic 'generic'], [Keywords#grid 'grid'] et [Keywords#ribbon 'ribbon']) :
{{{
game has world at generic; // l'attribut 'world' est 'generic' de base
game has world at grid;
game has world at ribbon;
}}}
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W]
=X=
[Keywords#Y Y] - [Keywords#Z Z]
----
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X]
=Y=
[Keywords#Z Z]
----
<br />
----
[Keywords#A A] - [Keywords#B B] - [Keywords#C C] - [Keywords#D D] - [Keywords#E E] - [Keywords#F F] - [Keywords#G G] - [Keywords#H H] - [Keywords#I I] - [Keywords#J J] - [Keywords#K K] - [Keywords#L L] - [Keywords#M M] - [Keywords#N N] - [Keywords#O O] - [Keywords#P P] - [Keywords#Q Q] - [Keywords#R R] - [Keywords#S S] - [Keywords#T T] - [Keywords#U U] - [Keywords#V V] - [Keywords#W W] - [Keywords#X X] - [Keywords#Y Y]
=Z=
<br />
----
<br />
<br />